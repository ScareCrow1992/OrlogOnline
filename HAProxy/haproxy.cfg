global
    maxconn     8192


defaults
    mode http
    log global
    option httplog
    option  http-server-close
    option  dontlognull
    option  redispatch
    option  contstats
    retries 3
    backlog 10000
    timeout client          250s
    timeout connect          100s
    timeout server          250s
    # timeout tunnel available in ALOHA 5.5 or HAProxy 1.5-dev10 and higher
    timeout tunnel        3600s
    timeout http-keep-alive  120s
    timeout http-request    150s
    timeout queue           300s
    timeout tarpit          600s
    # mode    http
    # log global
    # option  tcplog
    # option  dontlognull
    # option  tcpka
    # timeout queue   1m
    # timeout connect 5s
    # timeout client  480m
    # timeout server  480m
    # timeout check   5s


frontend game_client_front
    # mode http
    bind *:8000
    # tcp-request inspect-delay 500ms

    # acl is_websocket hdr(Upgrade) -i WebSocket
    # acl is_websocket hdr_beg(Host) -i ws

    acl domain_game_client hdr(host) -i orlog.io
    acl domain_game_server hdr(host) -i gs.orlog.io
    acl domain_match_maker hdr(host) -i mm.orlog.io

    # default game_client_back if domain_game_client
    use_backend game_client_back if domain_game_client
    use_backend game_server_back if domain_game_server
    use_backend match_maker_back if domain_match_maker


backend game_client_back
    # mode    http
    # option  httpclose
    # option  forwardfor
    # option  http-server-close
    # no option   httpclose

    server websrv3 game-client:3000 weight 1 maxconn 4096 check 


backend game_server_back
    # mode    http
    # option  httpclose
    # option  forwardfor
    # option  http-server-close
    # no option   httpclose

    server websrv3 game-server:8500 weight 1 maxconn 4096 check 


backend match_maker_back
    # mode    http
    # option  httpclose
    # option  forwardfor
    # option  http-server-close
    # no option   httpclose
    
    server websrv3 match-maker:9000 weight 1 maxconn 4096 check 





# frontend www_frontend
#     mode tcp
#     bind  *:35557

#     tcp-request inspect-delay 500ms
#     tcp-request content accept if HTTP

#     # websocket\

#     default_backend www_backend


# backend www_backend
#     mode    http
#     option  httpclose
#     option  forwardfor
#     option  http-server-close
    # no option   httpclose
    # server websrv1 host.docker.internal:7370 weight 1 maxconn 1024 check
    # server websrv2 host.docker.internal:7371 weight 1 maxconn 1024 check
